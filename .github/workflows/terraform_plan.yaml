name: Terraform Plan

on: 
    issue_comment:
        types: [ created ]

jobs:
    plan:
        permissions:
            id-token: write
            contents: read
            pull-requests: write
            statuses: write
        runs-on: ubuntu-latest
        if: github.event.issue.pull_request && contains(github.event.comment.body, '/rezboy_plan')
        steps:
            - name: Plan from Composite Action
              uses: pseudonative/reusable_work_flows/compositAction@main
              with:
                workflow_file: web_app_cicd.yaml
                artifact_name: branch
                artifact_path: BRANCH
                aws_region: us-east-1
                github_token: ${{ secrets.GITHUB_TOKEN }}
                aws_oidc_assume_role: ${{ secrets.OIDC_ROLE }}
              
            - name: Terraform init - plan
              id: plan 
              continue-on-error: true 
              run: |
                
                cd terraform/apply/production
                terraform init
                terraform plan
                terraform fmt -check
                terraform validate -no-color
                terraform plan -var="db_password=${{ secrets.RDS_PASS }}" -no-color -out=plan.tfout \
                && terraform show -no-color plan.tfout
                pwd && ls -alt

            - name: TF Plan to Github PR
              if: success() && steps.plan.conclusion == 'success'
              uses: pseudonative/reusable_work_flows/compositPlanOutPR@main
              with: 
                github_token: ${{ secrets.GITHUB_TOKEN }}
                environment: production
                stdout: ${{ steps.plan.outputs.stdout }}
                stderr: ${{ steps.plan.outputs.stderr }}
                stdout_or_stderr: ${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}

            - name: Archive TF Plan
              uses: actions/upload-artifact@v3
              with:
                name: plan
                path: terraform/apply/production/plan.tfout
