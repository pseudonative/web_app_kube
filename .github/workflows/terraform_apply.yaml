name: Terraform Apply

on: 
    issue_comment:
        types: [ created ]

jobs:
    apply:
        permissions:
            id-token: write
            contents: read
            pull-requests: write
            statuses: write
        runs-on: ubuntu-latest
        if: github.event.issue.pull_request && contains(github.event.comment.body, '/lgtm_apply')
        steps:
            - name: Plan from Composite Action
              uses: pseudonative/reusable_work_flows/compositAction@main
              with:
                workflow_file: aws_auth_staging.yaml
                artifact_name: branch
                artifact_path: BRANCH
                aws_region: us-east-1
                github_token: ${{ secrets.GITHUB_TOKEN }}
                aws_oidc_assume_role: ${{ secrets.OIDC_ROLE }}
              
            - name: Download Plan Artifact
              id: download_artifact
              uses: dawidd6/action-download-artifact@v2
              with:
                workflow: terraform_plan.yaml
                name: plan
                workflow_conclusion: success
                github_token: ${{ secrets.GITHUB_TOKEN }}
                path: terraform/apply/production
        
            - name: Set Up TF 
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: 1.5.0
        
            - name: Terraform Apply 
              id: apply 
              run: |
                cd terraform/apply/production
                terraform init
                terraform apply -auto-approve plan.tfout

            - name: Success on PR
              if: steps.apply.outcome == 'success'
              uses: actions/github-script@v6
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                  const issue_number = context.issue.number;
                  const message = `<span style="color: green;"><strong>Terraform Apply has succeeded.</strong></span>`;
                  github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue_number,
                    body: message
                  })